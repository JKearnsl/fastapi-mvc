name: K8s integration

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  # This job checks if an identical workflow is being triggered by different
  # event and skips it. For instance there is no need to run the same pipeline
  # twice for pull_request and push for identical commit sha.
  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v3.4.1
        with:
          skip_after_successful_duplicate: 'true'
          concurrent_skipping: same_content
          do_not_skip: '["pull_request", "workflow_dispatch", "schedule"]'
  install:
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: macos-10.15

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Init Poetry cache
        id: cached-poetry
        uses: actions/cache@v2
        with:
          path: ~/.poetry
          key: ${{ runner.os }}-poetry-3.9-${{ hashFiles('**/pyproject.toml') }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install package
        run: |
          export POETRY_HOME=$HOME/.poetry
          export POETRY_CACHE_DIR=$HOME/.poetry/store
          make install
        if: steps.cached-poetry.outputs.cache-hit != 'true'
  test-redis-ha:
    needs: install
    runs-on: macos-10.15

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Load Poetry cache
        uses: actions/cache@v2
        with:
          path: ~/.poetry
          key: ${{ runner.os }}-poetry-3.9-${{ hashFiles('**/pyproject.toml') }}-${{ hashFiles('**/poetry.lock') }}
      - name: Config path and poetry
        run: |
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH
          $HOME/.poetry/bin/poetry config cache-dir $HOME/.poetry/store
      - name: Generate test-project
        run: poetry run fastapi-mvc new --skip-install test-project
      - name: Load/Init Vagrant cache
        uses: actions/cache@v2
        with:
          path: ~/.vagrant.d/boxes
          key: vagrant-${{ hashFiles('test-project/Vagrantfile') }}
      - name: Run vagrant up
        run: |
          cd test-project
          vagrant up
      - name: Bootstrap minukube cluster and Redis operator
        run: |
          cd test-project
          vagrant ssh -c "cd /syncd && make dev-env"
      - name: Test exposed fastapi_mvc application
        run: |
          cd test-project
          vagrant ssh -c 'curl "http://test-project.$(minikube ip).nip.io/api/ready"'
  test-minimal:
    needs: install
    runs-on: macos-10.15

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Load Poetry cache
        uses: actions/cache@v2
        with:
          path: ~/.poetry
          key: ${{ runner.os }}-poetry-3.9-${{ hashFiles('**/pyproject.toml') }}-${{ hashFiles('**/poetry.lock') }}
      - name: Config path and poetry
        run: |
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH
          $HOME/.poetry/bin/poetry config cache-dir $HOME/.poetry/store
      - name: Generate test-project
        run: poetry run fastapi-mvc new --skip-redis --skip-aiohttp --skip-actions --skip-install test-project
      - name: Load/Init Vagrant cache
        uses: actions/cache@v2
        with:
          path: ~/.vagrant.d/boxes
          key: vagrant-${{ hashFiles('test-project/Vagrantfile') }}
      - name: Run vagrant up
        run: |
          cd test-project
          vagrant up
      - name: Bootstrap minukube cluster
        run: |
          cd test-project
          vagrant ssh -c "cd /syncd && make dev-env"
      - name: Test exposed fastapi_mvc application
        run: |
          cd test-project
          vagrant ssh -c 'curl "http://test-project.$(minikube ip).nip.io/api/ready"'
  test-generators:
    needs: install
    runs-on: macos-10.15

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Load Poetry cache
        uses: actions/cache@v2
        with:
          path: ~/.poetry
          key: ${{ runner.os }}-poetry-3.9-${{ hashFiles('**/pyproject.toml') }}-${{ hashFiles('**/poetry.lock') }}
      - name: Config path and poetry
        run: |
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH
          $HOME/.poetry/bin/poetry config cache-dir $HOME/.poetry/store
      - name: Generate test-project
        run: poetry run fastapi-mvc new --skip-redis --skip-aiohttp --skip-actions --skip-install test-project
      - name: Load/Init Vagrant cache
        uses: actions/cache@v2
        with:
          path: ~/.vagrant.d/boxes
          key: vagrant-${{ hashFiles('test-project/Vagrantfile') }}
      - name: Generate test controller
        run: |
          venv_path=$(poetry env info -p)
          cd test-project
          $venv_path/bin/fastapi-mvc generate controller foobar index create:post update:put delete:delete
      - name: Run vagrant up
        run: |
          cd test-project
          vagrant up
      - name: Bootstrap minukube cluster
        run: |
          cd test-project
          vagrant ssh -c "cd /syncd && make dev-env"
      - name: Test exposed fastapi_mvc application
        run: |
          cd test-project
          vagrant ssh -c 'curl "http://test-project.$(minikube ip).nip.io/api/ready"'
      - name: Test generated foobar controller
        run: |
          cd test-project
          vagrant ssh -c 'curl "http://test-project.$(minikube ip).nip.io/api/foobar/index"'
          vagrant ssh -c 'curl -X POST "http://test-project.$(minikube ip).nip.io/api/foobar/create"'
          vagrant ssh -c 'curl -X PUT "http://test-project.$(minikube ip).nip.io/api/foobar/update"'
          vagrant ssh -c 'curl -X DELETE "http://test-project.$(minikube ip).nip.io/api/foobar/delete"'