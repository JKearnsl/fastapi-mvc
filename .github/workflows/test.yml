name: Test

on: [push, pull_request]

jobs:
  metrics:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install project
        run: |
          make install
          poetry shell
      - name: Style guide
        run: |
          flake8 --select=E,W,I --max-line-length 80 --import-order-style pep8 --exclude .git,__pycache__,.eggs,*.egg,.pytest_cache,fastapi_mvc_template/version.py,setup.py,fastapi_mvc_template/__init__.py --tee --output-file=pep8_violations.txt --statistics --count setup.py fastapi_mvc_template
          flake8 --select=D --ignore D301 --tee --output-file=pep257_violations.txt --statistics --count setup.py fastapi_mvc_template
      - name: Code errors
        run: flake8 --select=F --tee --output-file=flake8_code_errors.txt --statistics --count setup.py fastapi_mvc_template
      - name: Code complexity
        run: flake8 --select=C901 --tee --output-file=code_complexity.txt --count fastapi_mvc_template
      - name: TODO
        run: flake8 --select=T --tee --output-file=todo_occurence.txt --statistics --count setup.py fastapi_mvc_template tests
  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.7, 3.8, 3.9 ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install project
        run: |
          make install
          poetry shell
      - name: Run unit tests
        run: py.test tests/unit --junit-xml=xunit-${{ matrix.python-version }}.xml
      - name: Run coverage
        run: pytest --cov=fastapi_mvc_template --cov-fail-under=70 --cov-report=xml --cov-report=term-missing tests
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
          files: ./coverage.xml
  integration-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.7, 3.8, 3.9 ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install project
        run: |
          make install
          poetry shell
      - name: Run integration tests
        run: py.test tests/integration --junit-xml=xunit-${{ matrix.python-version }}.xml