name: Test

on: [push, pull_request]

jobs:
  metrics:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 flake8-docstrings flake8-import-order
      - name: Style guide
        run: |
          flake8 --select=E,W,I --tee --output-file=pep8_violations.txt --statistics --count setup.py fastapi-mvc-template
          flake8 --select=D --tee --output-file=pep257_violations.txt --statistics --count setup.py fastapi-mvc-template
      - name: Code errors
        run: flake8 --select=F --tee --output-file=flake8_code_errors.txt --statistics --count setup.py fastapi-mvc-template
      - name: Code complexity
        run: flake8 --select=C901 --tee --output-file=code_complexity.txt --count
      - name: TODO
        run: flake8 --select=T --tee --output-file=todo_occurence.txt --statistics --count setup.py fastapi-mvc-template tests
  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.7, 3.8, 3.9 ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Style guide
        run: py.test tests/unit --junit-xml=xunit-${{ matrix.python-version }}.xml
  integration-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.7, 3.8, 3.9 ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Style guide
        run: py.test tests/integration --junit-xml=xunit-${{ matrix.python-version }}.xml